apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: csnoservice-pvc
  namespace: openhmis
spec:
  resources:
    requests:
      storage: 50Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
  storageClassName: manual
  volumeName: "csnoservice-pv"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: csnoservice
  namespace: openhmis
spec:
  selector:
    matchLabels:
      app: csnoservice
  serviceName: csnoservice
  replicas: 1
  template:
    metadata:
      labels:
        app: csnoservice
    spec:      
      volumes:
          - name: csnoservice-vol
            persistentVolumeClaim:
              claimName: csnoservice-pvc
      containers:        
      - name: csnoservice
        image: railtelhrit/csnoservice            
        ports:
        - containerPort: 8080
          name: web
        imagePullPolicy: Always
        resources:
          limits:
            memory: "4Gi"
            cpu: "2200m"
        volumeMounts:
        - name: csnoservice-vol
          mountPath: "/home"

  

# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: csnoservice
#   namespace: openhmis
# spec:
#   selector:
#     matchLabels:
#       app: csnoservice
#   template:
#     metadata:
#       labels:
#         app: csnoservice
#     spec:
#       volumes:
#         - name: csnoservice-vol
#           persistentVolumeClaim:
#             claimName: csnoservice-pvc
#       containers:
#       - name: csnoservice
#         image: railtelhrit/csnoservice
#         volumeMounts:
#           - mountPath: "/home"
#             name: csnoservice-vol                
#         resources:
#           limits:
#             memory: "6Gi"
#             cpu: "2800m"
#         ports:
#         - containerPort: 8080

---
apiVersion: v1
kind: Service
metadata:
  name: csnoservice
  namespace: openhmis
spec:
  selector:
    app: csnoservice
  ports:
  - port: 8080
    targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: csnoservice-ingress
  namespace: openhmis
  labels:
    name: csnoservice-ingress
spec:
  ingressClassName: nginx
  rules:
  - host: snomed.openhmis.erpapps.in
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: csnoservice
            port: 
              number: 8080
